name: 'Build ebooks'
description: ''
inputs:
  build_pdf:
    required: true
    default: true
  build_epub:
    required: true
    default: true
  build_azw3:
    required: true
    default: true
  build_mobi:
    description: ''
    required: true
    default: true
  validate_epub:
    required: true
    default: true
  optimize_epub:
    required: true
    default: true
  upload_artifacts:
    required: true
    default: true
outputs:
  release_tag:
    value: ${{ steps.tag.release_tag }}
  release_name:
    value: ${{ steps.tag.release_name }}
runs:
  using: "composite"
  steps:
    - name: Actions checkout
      uses: actions/checkout@v3
    - name: Check ref
      run: |
        ls --directory .git/
        cat .git/refs/heads/main
    - name: Build PDF
      run: make pdf2x
      shell: bash
      if: ${{ always() && inputs.build_pdf }}
    - name: Build EPUB
      run: make epub
      shell: bash
      if: ${{ always() && inputs.build_epub }}
    - name: Build Mobipocket
      run: make mobi
      shell: bash
      if: ${{ always() && inputs.build_mobi }}
    - name: Build AZW3
      run: make azw3
      shell: bash
      if: ${{ always() && inputs.build_azw3 }}
    - name: Validate EPUB
      run: make validate
      shell: bash
      if: ${{ always() && inputs.validate_epub }}
    - name: Optimize
      run: make optimize EPUB || true
      shell: bash
      if: ${{ always() && inputs.optimize_epub }}
    - name: Normalize filenames
      run: |
        for f in build/*; do mv "$f" "$(python3 -m unidecode -c "$f")"; done
        rename --verbose --filename 's/\\//g' build/*
        rename --verbose --filename 's/\s/_/g' build/*
    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::build_$(date +'%d.%m.%Y_%H-%M' --utc)"
        echo "::set-output name=release_name::Build $(date +'%d.%m.%Y %H:%M' --utc) UTC"
    - name: Upload release assets
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag.outputs.release_tag }}
        name: ${{ steps.tag.outputs.release_name }}
        body: Automatically built documents
        artifacts: "build/*"
        removeArtifacts: true
        artifactErrorsFailBuild: true
